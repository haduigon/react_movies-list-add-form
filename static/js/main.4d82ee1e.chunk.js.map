{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","utils.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","pattern","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","thisIsUrl","touched","setTouched","hasError","trim","hasErrorRegex","match","urlHasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","initialState","setMovie","formIsReady","length","handleInputField","prevState","onSubmit","disabled","App","moviesFromServer","visibleMovies","setVisibleMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d82ee1e.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","/* eslint-disable max-len */\nexport const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { pattern } from '../../utils';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const thisIsUrl = name === 'imdbUrl' || name === 'imgUrl';\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n  const hasErrorRegex = touched\n    && required && !value.match(pattern) && value.trim() && thisIsUrl;\n  const onBlurHandler = () => {\n    setTouched(true);\n  };\n\n  const urlHasError = thisIsUrl && hasErrorRegex;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={onBlurHandler}\n        />\n      </div>\n      {(hasError || hasErrorRegex) && (<p className=\"help is-danger\">{urlHasError ? `${label} is invalid` : `${label} is required`}</p>)}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { pattern } from '../../utils';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const initialState = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [movie, setMovie] = useState(initialState);\n  const handleButtonCLick = (\n  ) => {\n    setCount(prevState => (prevState + 1));\n    onAdd(movie);\n    setMovie(initialState);\n  };\n\n  const {\n    title,\n    imdbUrl,\n    imgUrl,\n    imdbId,\n  } = movie;\n\n  const formIsReady = (title) && imdbUrl.match(pattern)\n    && imgUrl.match(pattern) && imdbId.length > 0;\n\n  const handleInputField = (name: string, event: string) => {\n    setMovie(prevState => ({\n      ...prevState,\n      [name]: event.trim(),\n    }));\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleButtonCLick}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(event) => handleInputField('title', event)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(event) => handleInputField('description', event)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        onChange={(event) => handleInputField('imgUrl', event)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        onChange={(event) => handleInputField('imdbUrl', event)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        onChange={(event) => handleInputField('imdbId', event)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!formIsReady}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [visibleMovies, setVisibleMovies] = useState(moviesFromServer);\n  const onAdd = (movie: Movie) => {\n    setVisibleMovies([movie, ...visibleMovies]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={visibleMovies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}